% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/design_hdr.R
\name{design_hdr}
\alias{design_hdr}
\title{Design HDR Repair Templates for CRISPR}
\usage{
design_hdr(
  design_name,
  chrom,
  variant_start,
  variant_end,
  REF,
  ALT,
  ALT_on_guides,
  ALT_on_templates,
  output_dir,
  annotation,
  genome = BSgenome.Hsapiens.UCSC.hg38::BSgenome.Hsapiens.UCSC.hg38,
  strategy,
  maximum_mutations_per_template = 3,
  filter_to_guide = "",
  guide_distance = 10 + 17,
  allowed_positions_upstream = 1:10,
  allowed_positions_downstream = 1:10,
  template_upstream = 59,
  template_downstream = 61,
  seed = 42,
  intron_bp = 6,
  exon_bp = 3,
  snps = NULL,
  clinvar = NULL,
  cadd = NULL,
  score_efficiency = FALSE,
  do_probes = TRUE,
  primer3 = "",
  alphagenome_key = "",
  python_exec = "python3"
)
}
\arguments{
\item{design_name}{A short name for this mutation, e.g., "tyr82cys".0,}

\item{chrom}{Chromosome of the variant to correct. e.g. chr1}

\item{variant_start}{Position on the chromosome for the variant (its on + strand)}

\item{variant_end}{Position end of the variant on the chromosome}

\item{REF}{The original base on the genome, e.g., "A".}

\item{ALT}{The desired mutated base, e.g., "G".}

\item{ALT_on_guides}{Guides should match your target cell sequences. Select false when targetting wild type.}

\item{ALT_on_templates}{This should match your desired outcome. Select true when correcting alt variant.}

\item{output_dir}{Path to the directory where output files will be saved.}

\item{annotation}{File path to the genome annotation file (GFF3/GTF) or (.db/.sqlite) that can be loaded with \code{AnnotationDbi::loadDb}.}

\item{genome}{A \code{BSgenome} object for your genome, e.g., \code{BSgenome.Hsapiens.UCSC.hg38}.}

\item{strategy}{The template generation strategy. Must be one of:
\itemize{
\item \code{"optimal_per_guide"}: (Default) Designs one optimized template for each guide. Templates are optimized by selecting synonymous SNPs to disrupt guides while minimizing other functional impacts.
\item \code{"optimal_for_all"}: Designs a single optimized template that works best across all identified guides.
\item \code{"all_per_guide"}: Generates all possible template combinations for each guide, for a range of mutation counts from 0 to \code{maximum_mutations_per_template}.
}}

\item{maximum_mutations_per_template}{The maximum number of synonymous SNPs to introduce per repair template.}

\item{filter_to_guide}{Optional. A 20bp character string of a specific guide sequence. If provided, the design process will be restricted to only this guide.}

\item{guide_distance}{Window around the mutation to search for guides (default: 27).}

\item{allowed_positions_upstream}{A vector of positions upstream to the variant to consider for introducing synonymous SNPs (default: 1:10).}

\item{allowed_positions_downstream}{A vector of positions downstream to the variant to consider for introducing synonymous SNPs (default: 1:10).}

\item{template_upstream}{How many bp upstream of the mutation to include in the repair template (default: 59).}

\item{template_downstream}{How many bp downstream of the mutation to include in the repair template (default: 61).}

\item{seed}{An integer for setting the random seed to ensure reproducibility.}

\item{intron_bp}{Number of intronic bases near splice sites to exclude from synonymous SNPs (default: 6).}

\item{exon_bp}{Number of exonic bases near splice sites to exclude from synonymous SNPs (default: 3).}

\item{snps}{Optional. An object like \code{SNPlocs.Hsapiens.dbSNP155.GRCh38}.}

\item{clinvar}{Optional. File path to a ClinVar VCF file.}

\item{cadd}{Optional. A function to retrieve CADD scores, e.g., \code{getGScores("cadd.v1.6.hg38")}.}

\item{score_efficiency}{Logical. If \code{TRUE}, score guides using models from the \code{crisprScore} package.}

\item{do_probes}{Logical. If \code{TRUE}, design qPCR probes for HDR, NHEJ, and Reference.}

\item{primer3}{Optional. Full path to the \code{primer3_core} executable to design PCR primers.}

\item{alphagenome_key}{Your key to the alphagenome service.}

\item{python_exec}{path to the python3 that has alphagenome installed.}
}
\value{
This function does not return a value. It writes all output files to the specified \code{output_dir}.
}
\description{
A comprehensive function to design HDR repair templates. It can generate templates
using different strategies: finding one optimal template for each guide, finding one optimal
template for all guides, or generating all possible template combinations.
}
